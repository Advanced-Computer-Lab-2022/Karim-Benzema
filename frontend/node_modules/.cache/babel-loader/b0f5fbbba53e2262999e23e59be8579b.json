{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = !0, exports.default = exports.Select = void 0;\nvar _base = _interopRequireDefault(require(\"@emotion/styled/base\")),\n  _react = _interopRequireWildcard(require(\"react\")),\n  _reactDom = _interopRequireDefault(require(\"react-dom\")),\n  _propTypes = _interopRequireDefault(require(\"prop-types\")),\n  _ClickOutside = _interopRequireDefault(require(\"./components/ClickOutside\")),\n  _Content = _interopRequireDefault(require(\"./components/Content\")),\n  _Dropdown = _interopRequireDefault(require(\"./components/Dropdown\")),\n  _Loading = _interopRequireDefault(require(\"./components/Loading\")),\n  _Clear = _interopRequireDefault(require(\"./components/Clear\")),\n  _Separator = _interopRequireDefault(require(\"./components/Separator\")),\n  _DropdownHandle = _interopRequireDefault(require(\"./components/DropdownHandle\")),\n  _util = require(\"./util\"),\n  _constants = require(\"./constants\");\nfunction _getRequireWildcardCache() {\n  if (\"function\" != typeof WeakMap) return null;\n  var a = new WeakMap();\n  return _getRequireWildcardCache = function () {\n    return a;\n  }, a;\n}\nfunction _interopRequireWildcard(a) {\n  if (a && a.__esModule) return a;\n  if (null === a || \"object\" != typeof a && \"function\" != typeof a) return {\n    default: a\n  };\n  var b = _getRequireWildcardCache();\n  if (b && b.has(a)) return b.get(a);\n  var c = {},\n    d = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var e in a) if (Object.prototype.hasOwnProperty.call(a, e)) {\n    var f = d ? Object.getOwnPropertyDescriptor(a, e) : null;\n    f && (f.get || f.set) ? Object.defineProperty(c, e, f) : c[e] = a[e];\n  }\n  return c.default = a, b && b.set(a, c), c;\n}\nfunction _interopRequireDefault(a) {\n  return a && a.__esModule ? a : {\n    default: a\n  };\n}\nfunction _extends() {\n  return _extends = Object.assign || function (a) {\n    for (var b, c = 1; c < arguments.length; c++) for (var d in b = arguments[c], b) Object.prototype.hasOwnProperty.call(b, d) && (a[d] = b[d]);\n    return a;\n  }, _extends.apply(this, arguments);\n}\nfunction _assertThisInitialized(a) {\n  if (void 0 === a) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  return a;\n}\nfunction _inheritsLoose(a, b) {\n  a.prototype = Object.create(b.prototype), a.prototype.constructor = a, a.__proto__ = b;\n}\nfunction _defineProperty(a, b, c) {\n  return b in a ? Object.defineProperty(a, b, {\n    value: c,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : a[b] = c, a;\n}\nvar Select = /*#__PURE__*/function (a) {\n  function b(b) {\n    var c;\n    return c = a.call(this, b) || this, _defineProperty(_assertThisInitialized(c), \"onDropdownClose\", function () {\n      c.setState({\n        cursor: null\n      }), c.props.onDropdownClose();\n    }), _defineProperty(_assertThisInitialized(c), \"onScroll\", function () {\n      c.props.closeOnScroll && c.dropDown(\"close\"), c.updateSelectBounds();\n    }), _defineProperty(_assertThisInitialized(c), \"updateSelectBounds\", function () {\n      return c.select.current && c.setState({\n        selectBounds: c.select.current.getBoundingClientRect()\n      });\n    }), _defineProperty(_assertThisInitialized(c), \"getSelectBounds\", function () {\n      return c.state.selectBounds;\n    }), _defineProperty(_assertThisInitialized(c), \"dropDown\", function (a, b, d) {\n      void 0 === a && (a = \"toggle\"), void 0 === d && (d = !1);\n      var e = b && b.target || b && b.srcElement;\n      return void 0 !== c.props.onDropdownCloseRequest && c.state.dropdown && !1 === d && \"close\" === a ? c.props.onDropdownCloseRequest({\n        props: c.props,\n        methods: c.methods,\n        state: c.state,\n        close: function close() {\n          return c.dropDown(\"close\", null, !0);\n        }\n      }) : c.props.portal && !c.props.closeOnScroll && !c.props.closeOnSelect && b && e && e.offsetParent && e.offsetParent.classList.contains(\"react-dropdown-select-dropdown\") ? void 0 : c.props.keepOpen ? c.setState({\n        dropdown: !0\n      }) : \"close\" === a && c.state.dropdown ? (c.select.current.blur(), c.setState({\n        dropdown: !1,\n        search: c.props.clearOnBlur ? \"\" : c.state.search,\n        searchResults: c.props.options\n      })) : \"open\" !== a || c.state.dropdown ? \"toggle\" === a && (c.select.current.focus(), c.setState({\n        dropdown: !c.state.dropdown\n      })) : c.setState({\n        dropdown: !0\n      });\n    }), _defineProperty(_assertThisInitialized(c), \"getSelectRef\", function () {\n      return c.select.current;\n    }), _defineProperty(_assertThisInitialized(c), \"addItem\", function (a) {\n      if (c.props.multi) {\n        if ((0, _util.valueExistInSelected)((0, _util.getByPath)(a, c.props.valueField), c.state.values, c.props)) return c.removeItem(null, a, !1);\n        c.setState({\n          values: [].concat(c.state.values, [a])\n        });\n      } else c.setState({\n        values: [a],\n        dropdown: !1\n      });\n      return c.props.clearOnSelect && c.setState({\n        search: \"\"\n      }, function () {\n        c.setState({\n          searchResults: c.searchResults()\n        });\n      }), !0;\n    }), _defineProperty(_assertThisInitialized(c), \"removeItem\", function (a, b, d) {\n      void 0 === d && (d = !1), a && d && (a.preventDefault(), a.stopPropagation(), c.dropDown(\"close\")), c.setState({\n        values: c.state.values.filter(function (a) {\n          return (0, _util.getByPath)(a, c.props.valueField) !== (0, _util.getByPath)(b, c.props.valueField);\n        })\n      });\n    }), _defineProperty(_assertThisInitialized(c), \"setSearch\", function (a) {\n      c.setState({\n        cursor: null\n      }), c.setState({\n        search: a.target.value\n      }, function () {\n        c.setState({\n          searchResults: c.searchResults()\n        });\n      });\n    }), _defineProperty(_assertThisInitialized(c), \"getInputSize\", function () {\n      return c.state.search ? c.state.search.length : 0 < c.state.values.length ? c.props.addPlaceholder.length : c.props.placeholder.length;\n    }), _defineProperty(_assertThisInitialized(c), \"toggleSelectAll\", function () {\n      return c.setState({\n        values: 0 === c.state.values.length ? c.selectAll() : c.clearAll()\n      });\n    }), _defineProperty(_assertThisInitialized(c), \"clearAll\", function () {\n      c.props.onClearAll(), c.setState({\n        values: []\n      });\n    }), _defineProperty(_assertThisInitialized(c), \"selectAll\", function (a) {\n      void 0 === a && (a = []), c.props.onSelectAll();\n      var b = 0 < a.length ? a : c.props.options.filter(function (a) {\n        return !a.disabled;\n      });\n      c.setState({\n        values: b\n      });\n    }), _defineProperty(_assertThisInitialized(c), \"isSelected\", function (a) {\n      return !!c.state.values.find(function (b) {\n        return (0, _util.getByPath)(b, c.props.valueField) === (0, _util.getByPath)(a, c.props.valueField);\n      });\n    }), _defineProperty(_assertThisInitialized(c), \"areAllSelected\", function () {\n      return c.state.values.length === c.props.options.filter(function (a) {\n        return !a.disabled;\n      }).length;\n    }), _defineProperty(_assertThisInitialized(c), \"safeString\", function (a) {\n      return a.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    }), _defineProperty(_assertThisInitialized(c), \"sortBy\", function () {\n      var a = c.props,\n        d = a.sortBy,\n        e = a.options;\n      return d ? (e.sort(function (c, a) {\n        return (0, _util.getProp)(c, d) < (0, _util.getProp)(a, d) ? -1 : (0, _util.getProp)(c, d) > (0, _util.getProp)(a, d) ? 1 : 0;\n      }), e) : e;\n    }), _defineProperty(_assertThisInitialized(c), \"searchFn\", function (a) {\n      var b = a.state,\n        d = a.methods,\n        e = new RegExp(d.safeString(b.search), \"i\");\n      return d.sortBy().filter(function (a) {\n        return e.test((0, _util.getByPath)(a, c.props.searchBy) || (0, _util.getByPath)(a, c.props.valueField));\n      });\n    }), _defineProperty(_assertThisInitialized(c), \"searchResults\", function () {\n      var a = {\n        state: c.state,\n        props: c.props,\n        methods: c.methods\n      };\n      return c.props.searchFn(a) || c.searchFn(a);\n    }), _defineProperty(_assertThisInitialized(c), \"activeCursorItem\", function (a) {\n      return c.setState({\n        activeCursorItem: a\n      });\n    }), _defineProperty(_assertThisInitialized(c), \"handleKeyDown\", function (a) {\n      var b = {\n        event: a,\n        state: c.state,\n        props: c.props,\n        methods: c.methods,\n        setState: c.setState.bind(_assertThisInitialized(c))\n      };\n      return c.props.handleKeyDownFn(b) || c.handleKeyDownFn(b);\n    }), _defineProperty(_assertThisInitialized(c), \"handleKeyDownFn\", function (a) {\n      var b = a.event,\n        d = a.state,\n        e = a.props,\n        f = a.methods,\n        g = a.setState,\n        h = d.cursor,\n        i = d.searchResults,\n        j = \"Escape\" === b.key,\n        k = \"Enter\" === b.key,\n        l = \"ArrowUp\" === b.key,\n        m = \"ArrowDown\" === b.key,\n        n = \"Backspace\" === b.key,\n        o = \"Tab\" === b.key && !b.shiftKey,\n        p = b.shiftKey && \"Tab\" === b.key;\n      if (m && !d.dropdown) return b.preventDefault(), c.dropDown(\"open\"), g({\n        cursor: 0\n      });\n      if ((m || o && d.dropdown) && null === h) return g({\n        cursor: 0\n      });\n      if ((l || m || p && d.dropdown || o && d.dropdown) && b.preventDefault(), j && c.dropDown(\"close\"), k) {\n        var q = i[h];\n        if (q && !q.disabled) {\n          if (e.create && (0, _util.valueExistInSelected)(d.search, d.values, e)) return null;\n          f.addItem(q);\n        }\n      }\n      return (m || o && d.dropdown) && i.length === h ? g({\n        cursor: 0\n      }) : void ((m || o && d.dropdown) && g(function (a) {\n        return {\n          cursor: a.cursor + 1\n        };\n      }), (l || p && d.dropdown) && 0 < h && g(function (a) {\n        return {\n          cursor: a.cursor - 1\n        };\n      }), (l || p && d.dropdown) && 0 === h && g({\n        cursor: i.length\n      }), n && e.backspaceDelete && 0 === c.getInputSize() && c.setState({\n        values: c.state.values.slice(0, -1)\n      }));\n    }), _defineProperty(_assertThisInitialized(c), \"renderDropdown\", function () {\n      return c.props.portal ? _reactDom.default.createPortal(_react.default.createElement(_Dropdown.default, {\n        props: c.props,\n        state: c.state,\n        methods: c.methods\n      }), c.dropdownRoot) : _react.default.createElement(_Dropdown.default, {\n        props: c.props,\n        state: c.state,\n        methods: c.methods\n      });\n    }), _defineProperty(_assertThisInitialized(c), \"createNew\", function (a) {\n      var b,\n        d = (b = {}, b[c.props.labelField] = a, b[c.props.valueField] = a, b);\n      c.addItem(d), c.props.onCreateNew(d), c.setState({\n        search: \"\"\n      });\n    }), c.state = {\n      dropdown: !1,\n      values: b.values,\n      search: \"\",\n      selectBounds: {},\n      cursor: null,\n      searchResults: b.options\n    }, c.methods = {\n      removeItem: c.removeItem,\n      dropDown: c.dropDown,\n      addItem: c.addItem,\n      setSearch: c.setSearch,\n      getInputSize: c.getInputSize,\n      toggleSelectAll: c.toggleSelectAll,\n      clearAll: c.clearAll,\n      selectAll: c.selectAll,\n      searchResults: c.searchResults,\n      getSelectRef: c.getSelectRef,\n      isSelected: c.isSelected,\n      getSelectBounds: c.getSelectBounds,\n      areAllSelected: c.areAllSelected,\n      handleKeyDown: c.handleKeyDown,\n      activeCursorItem: c.activeCursorItem,\n      createNew: c.createNew,\n      sortBy: c.sortBy,\n      safeString: c.safeString\n    }, c.select = _react.default.createRef(), c.dropdownRoot = \"undefined\" != typeof document && document.createElement(\"div\"), c;\n  }\n  _inheritsLoose(b, a);\n  var c = b.prototype;\n  return c.componentDidMount = function componentDidMount() {\n    this.props.portal && this.props.portal.appendChild(this.dropdownRoot), (0, _util.isomorphicWindow)().addEventListener(\"resize\", (0, _util.debounce)(this.updateSelectBounds)), (0, _util.isomorphicWindow)().addEventListener(\"scroll\", (0, _util.debounce)(this.onScroll)), this.dropDown(\"close\"), this.select && this.updateSelectBounds();\n  }, c.componentDidUpdate = function componentDidUpdate(a, b) {\n    var c = this;\n    !this.props.compareValuesFunc(a.values, this.props.values) && this.props.compareValuesFunc(a.values, b.values) && (this.setState({\n      values: this.props.values\n    }, function () {\n      c.props.onChange(c.state.values);\n    }), this.updateSelectBounds()), a.options !== this.props.options && this.setState({\n      searchResults: this.searchResults()\n    }), b.values !== this.state.values && (this.props.onChange(this.state.values), this.updateSelectBounds()), b.search !== this.state.search && this.updateSelectBounds(), b.values !== this.state.values && this.props.closeOnSelect && this.dropDown(\"close\"), a.multi !== this.props.multi && this.updateSelectBounds(), b.dropdown && b.dropdown !== this.state.dropdown && this.onDropdownClose(), b.dropdown || b.dropdown === this.state.dropdown || this.props.onDropdownOpen();\n  }, c.componentWillUnmount = function componentWillUnmount() {\n    this.props.portal && this.props.portal.removeChild(this.dropdownRoot), (0, _util.isomorphicWindow)().removeEventListener(\"resize\", (0, _util.debounce)(this.updateSelectBounds, this.props.debounceDelay)), (0, _util.isomorphicWindow)().removeEventListener(\"scroll\", (0, _util.debounce)(this.onScroll, this.props.debounceDelay));\n  }, c.render = function render() {\n    var a = this;\n    return _react.default.createElement(_ClickOutside.default, {\n      onClickOutside: function onClickOutside(b) {\n        return a.dropDown(\"close\", b);\n      }\n    }, _react.default.createElement(ReactDropdownSelect, _extends({\n      onKeyDown: this.handleKeyDown,\n      \"aria-label\": \"Dropdown select\",\n      \"aria-expanded\": this.state.dropdown,\n      onClick: function onClick(b) {\n        return a.dropDown(\"open\", b);\n      },\n      tabIndex: this.props.disabled ? \"-1\" : \"0\",\n      direction: this.props.direction,\n      style: this.props.style,\n      ref: this.select,\n      disabled: this.props.disabled,\n      className: _constants.LIB_NAME + \" \" + this.props.className,\n      color: this.props.color\n    }, this.props.additionalProps), _react.default.createElement(_Content.default, {\n      props: this.props,\n      state: this.state,\n      methods: this.methods\n    }), (this.props.name || this.props.required) && _react.default.createElement(\"input\", {\n      tabIndex: -1,\n      style: {\n        opacity: 0,\n        width: 0,\n        position: \"absolute\"\n      },\n      name: this.props.name,\n      required: this.props.required,\n      pattern: this.props.pattern,\n      defaultValue: this.state.values.map(function (b) {\n        return b[a.props.labelField];\n      }).toString() || [],\n      disabled: this.props.disabled\n    }), this.props.loading && _react.default.createElement(_Loading.default, {\n      props: this.props\n    }), this.props.clearable && _react.default.createElement(_Clear.default, {\n      props: this.props,\n      state: this.state,\n      methods: this.methods\n    }), this.props.separator && _react.default.createElement(_Separator.default, {\n      props: this.props,\n      state: this.state,\n      methods: this.methods\n    }), this.props.dropdownHandle && _react.default.createElement(_DropdownHandle.default, {\n      onClick: function onClick() {\n        return a.select.current.focus();\n      },\n      props: this.props,\n      state: this.state,\n      methods: this.methods\n    }), this.state.dropdown && !this.props.disabled && this.renderDropdown()));\n  }, b;\n}(_react.Component);\nexports.Select = Select, Select.defaultProps = {\n  addPlaceholder: \"\",\n  placeholder: \"Select...\",\n  values: [],\n  options: [],\n  multi: !1,\n  disabled: !1,\n  searchBy: \"label\",\n  sortBy: null,\n  clearable: !1,\n  searchable: !0,\n  dropdownHandle: !0,\n  separator: !1,\n  keepOpen: void 0,\n  noDataLabel: \"No data\",\n  createNewLabel: \"add {search}\",\n  disabledLabel: \"disabled\",\n  dropdownGap: 5,\n  closeOnScroll: !1,\n  debounceDelay: 0,\n  labelField: \"label\",\n  valueField: \"value\",\n  color: \"#0074D9\",\n  keepSelectedInList: !0,\n  closeOnSelect: !1,\n  clearOnBlur: !0,\n  clearOnSelect: !0,\n  dropdownPosition: \"bottom\",\n  dropdownHeight: \"300px\",\n  autoFocus: !1,\n  portal: null,\n  create: !1,\n  direction: \"ltr\",\n  name: null,\n  required: !1,\n  pattern: void 0,\n  onChange: function onChange() {},\n  onDropdownOpen: function onDropdownOpen() {},\n  onDropdownClose: function onDropdownClose() {},\n  onDropdownCloseRequest: void 0,\n  onClearAll: function onClearAll() {},\n  onSelectAll: function onSelectAll() {},\n  onCreateNew: function onCreateNew() {},\n  searchFn: function searchFn() {},\n  handleKeyDownFn: function handleKeyDownFn() {},\n  additionalProps: null,\n  backspaceDelete: !0,\n  compareValuesFunc: _util.isEqual\n};\nvar ReactDropdownSelect = (0, _base.default)(\"div\", \"production\" === process.env.NODE_ENV ? {\n    target: \"e1gzf2xs0\"\n  } : {\n    target: \"e1gzf2xs0\",\n    label: \"ReactDropdownSelect\"\n  })(\"box-sizing:border-box;position:relative;display:flex;border:1px solid #ccc;width:100%;border-radius:2px;padding:2px 5px;flex-direction:row;direction:\", function (a) {\n    var b = a.direction;\n    return b;\n  }, \";align-items:center;cursor:pointer;min-height:36px;\", function (a) {\n    var b = a.disabled;\n    return b ? \"cursor: not-allowed;pointer-events: none;opacity: 0.3;\" : \"pointer-events: all;\";\n  }, \" :hover,:focus-within{border-color:\", function (a) {\n    var b = a.color;\n    return b;\n  }, \";}:focus,:focus-within{outline:0;box-shadow:0 0 0 3px \", function (a) {\n    var b = a.color;\n    return (0, _util.hexToRGBA)(b, .2);\n  }, \";}*{box-sizing:border-box;}\" + (\"production\" === process.env.NODE_ENV ? \"\" : \"\")),\n  _default = Select;\nexports.default = _default;","map":{"version":3,"mappings":"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","names":["exports","_react","_reactDom","_propTypes","_ClickOutside","_Content","_Dropdown","_Loading","_Clear","_Separator","_DropdownHandle","_util","_constants","default","d","f","a","value","enumerable","configurable","writable","c","cursor","selectBounds","props","methods","state","close","dropdown","search","searchResults","values","e","activeCursorItem","event","setState","g","h","i","j","k","l","m","n","o","p","removeItem","dropDown","addItem","setSearch","getInputSize","toggleSelectAll","clearAll","selectAll","getSelectRef","isSelected","getSelectBounds","areAllSelected","handleKeyDown","createNew","sortBy","safeString","_inheritsLoose","onClickOutside","onKeyDown","onClick","tabIndex","direction","style","ref","disabled","className","color","opacity","width","position","name","required","pattern","defaultValue","addPlaceholder","placeholder","options","multi","searchBy","clearable","searchable","dropdownHandle","separator","keepOpen","noDataLabel","createNewLabel","disabledLabel","dropdownGap","closeOnScroll","debounceDelay","labelField","valueField","keepSelectedInList","closeOnSelect","clearOnBlur","clearOnSelect","dropdownPosition","dropdownHeight","autoFocus","portal","create","onChange","onDropdownOpen","onDropdownClose","onDropdownCloseRequest","onClearAll","onSelectAll","onCreateNew","searchFn","handleKeyDownFn","additionalProps","backspaceDelete","compareValuesFunc","target","label","_default"],"sources":["C:\\Users\\Yasmen\\Desktop\\Karim-Benzema-elfinale\\frontend\\node_modules\\react-dropdown-select\\src\\index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport ClickOutside from './components/ClickOutside';\n\nimport Content from './components/Content';\nimport Dropdown from './components/Dropdown';\nimport Loading from './components/Loading';\nimport Clear from './components/Clear';\nimport Separator from './components/Separator';\nimport DropdownHandle from './components/DropdownHandle';\n\nimport {\n  debounce,\n  hexToRGBA,\n  isEqual,\n  getByPath,\n  getProp,\n  valueExistInSelected,\n  isomorphicWindow\n} from './util';\nimport { LIB_NAME } from './constants';\n\nexport class Select extends Component {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n    onDropdownClose: PropTypes.func,\n    onDropdownCloseRequest: PropTypes.func,\n    onDropdownOpen: PropTypes.func,\n    onClearAll: PropTypes.func,\n    onSelectAll: PropTypes.func,\n    values: PropTypes.array,\n    options: PropTypes.array.isRequired,\n    keepOpen: PropTypes.bool,\n    dropdownGap: PropTypes.number,\n    multi: PropTypes.bool,\n    placeholder: PropTypes.string,\n    addPlaceholder: PropTypes.string,\n    disabled: PropTypes.bool,\n    className: PropTypes.string,\n    loading: PropTypes.bool,\n    clearable: PropTypes.bool,\n    searchable: PropTypes.bool,\n    separator: PropTypes.bool,\n    dropdownHandle: PropTypes.bool,\n    searchBy: PropTypes.string,\n    sortBy: PropTypes.string,\n    closeOnScroll: PropTypes.bool,\n    openOnTop: PropTypes.bool,\n    style: PropTypes.object,\n    contentRenderer: PropTypes.func,\n    dropdownRenderer: PropTypes.func,\n    itemRenderer: PropTypes.func,\n    noDataRenderer: PropTypes.func,\n    optionRenderer: PropTypes.func,\n    inputRenderer: PropTypes.func,\n    loadingRenderer: PropTypes.func,\n    clearRenderer: PropTypes.func,\n    separatorRenderer: PropTypes.func,\n    dropdownHandleRenderer: PropTypes.func,\n    direction: PropTypes.string,\n    required: PropTypes.bool,\n    pattern: PropTypes.string,\n    name: PropTypes.string,\n    backspaceDelete: PropTypes.bool,\n    compareValuesFunc: PropTypes.func\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dropdown: false,\n      values: props.values,\n      search: '',\n      selectBounds: {},\n      cursor: null,\n      searchResults: props.options,\n    };\n\n    this.methods = {\n      removeItem: this.removeItem,\n      dropDown: this.dropDown,\n      addItem: this.addItem,\n      setSearch: this.setSearch,\n      getInputSize: this.getInputSize,\n      toggleSelectAll: this.toggleSelectAll,\n      clearAll: this.clearAll,\n      selectAll: this.selectAll,\n      searchResults: this.searchResults,\n      getSelectRef: this.getSelectRef,\n      isSelected: this.isSelected,\n      getSelectBounds: this.getSelectBounds,\n      areAllSelected: this.areAllSelected,\n      handleKeyDown: this.handleKeyDown,\n      activeCursorItem: this.activeCursorItem,\n      createNew: this.createNew,\n      sortBy: this.sortBy,\n      safeString: this.safeString\n    };\n\n    this.select = React.createRef();\n    this.dropdownRoot = typeof document !== 'undefined' && document.createElement('div');\n  }\n\n  componentDidMount() {\n    this.props.portal && this.props.portal.appendChild(this.dropdownRoot);\n    isomorphicWindow().addEventListener('resize', debounce(this.updateSelectBounds));\n    isomorphicWindow().addEventListener('scroll', debounce(this.onScroll));\n\n    this.dropDown('close');\n\n    if (this.select) {\n      this.updateSelectBounds();\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      !this.props.compareValuesFunc(prevProps.values, this.props.values) &&\n      this.props.compareValuesFunc(prevProps.values, prevState.values)\n    ) {\n      this.setState(\n        {\n          values: this.props.values\n        },\n        () => {\n          this.props.onChange(this.state.values);\n        }\n      );\n      this.updateSelectBounds();\n    }\n\n    if (prevProps.options !== this.props.options) {\n      this.setState({ searchResults: this.searchResults() });\n    }\n\n    if (prevState.values !== this.state.values) {\n      this.props.onChange(this.state.values);\n      this.updateSelectBounds();\n    }\n\n    if (prevState.search !== this.state.search) {\n      this.updateSelectBounds();\n    }\n\n    if (prevState.values !== this.state.values && this.props.closeOnSelect) {\n      this.dropDown('close');\n    }\n\n    if (prevProps.multi !== this.props.multi) {\n      this.updateSelectBounds();\n    }\n\n    if (prevState.dropdown && prevState.dropdown !== this.state.dropdown) {\n      this.onDropdownClose();\n    }\n\n    if (!prevState.dropdown && prevState.dropdown !== this.state.dropdown) {\n      this.props.onDropdownOpen();\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.portal && this.props.portal.removeChild(this.dropdownRoot);\n    isomorphicWindow().removeEventListener(\n      'resize',\n      debounce(this.updateSelectBounds, this.props.debounceDelay)\n    );\n    isomorphicWindow().removeEventListener(\n      'scroll',\n      debounce(this.onScroll, this.props.debounceDelay)\n    );\n  }\n\n  onDropdownClose = () => {\n    this.setState({ cursor: null });\n    this.props.onDropdownClose();\n  };\n\n  onScroll = () => {\n    if (this.props.closeOnScroll) {\n      this.dropDown('close');\n    }\n\n    this.updateSelectBounds();\n  };\n\n  updateSelectBounds = () =>\n    this.select.current &&\n    this.setState({\n      selectBounds: this.select.current.getBoundingClientRect()\n    });\n\n  getSelectBounds = () => this.state.selectBounds;\n\n  dropDown = (action = 'toggle', event, force = false) => {\n    const target = (event && event.target) || (event && event.srcElement);\n\n    if (\n      this.props.onDropdownCloseRequest !== undefined &&\n      this.state.dropdown &&\n      force === false &&\n      action === 'close'\n    ) {\n      return this.props.onDropdownCloseRequest({\n        props: this.props,\n        methods: this.methods,\n        state: this.state,\n        close: () => this.dropDown('close', null, true)\n      });\n    }\n\n    if (\n      this.props.portal &&\n      !this.props.closeOnScroll &&\n      !this.props.closeOnSelect &&\n      event &&\n      target &&\n      target.offsetParent &&\n      target.offsetParent.classList.contains('react-dropdown-select-dropdown')\n    ) {\n      return;\n    }\n\n    if (this.props.keepOpen) {\n      return this.setState({ dropdown: true });\n    }\n\n    if (action === 'close' && this.state.dropdown) {\n      this.select.current.blur();\n\n      return this.setState({\n        dropdown: false,\n        search: this.props.clearOnBlur ? '' : this.state.search,\n        searchResults: this.props.options,\n      });\n    }\n\n    if (action === 'open' && !this.state.dropdown) {\n      return this.setState({ dropdown: true });\n    }\n\n    if (action === 'toggle') {\n      this.select.current.focus();\n      return this.setState({ dropdown: !this.state.dropdown });\n    }\n\n    return false;\n  };\n\n  getSelectRef = () => this.select.current;\n\n  addItem = (item) => {\n    if (this.props.multi) {\n      if (\n        valueExistInSelected(getByPath(item, this.props.valueField), this.state.values, this.props)\n      ) {\n        return this.removeItem(null, item, false);\n      }\n\n      this.setState({\n        values: [...this.state.values, item]\n      });\n    } else {\n      this.setState({\n        values: [item],\n        dropdown: false\n      });\n    }\n\n    this.props.clearOnSelect &&\n      this.setState({ search: '' }, () => {\n        this.setState({ searchResults: this.searchResults() });\n      });\n\n    return true;\n  };\n\n  removeItem = (event, item, close = false) => {\n    if (event && close) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.dropDown('close');\n    }\n\n    this.setState({\n      values: this.state.values.filter(\n        (values) =>\n          getByPath(values, this.props.valueField) !== getByPath(item, this.props.valueField)\n      )\n    });\n  };\n\n  setSearch = (event) => {\n    this.setState({\n      cursor: null\n    });\n\n    this.setState({\n      search: event.target.value,\n    }, () => {\n      this.setState({ searchResults: this.searchResults() })\n    });\n  };\n\n  getInputSize = () => {\n    if (this.state.search) {\n      return this.state.search.length;\n    }\n\n    if (this.state.values.length > 0) {\n      return this.props.addPlaceholder.length;\n    }\n\n    return this.props.placeholder.length;\n  };\n\n  toggleSelectAll = () => {\n    return this.setState({\n      values: this.state.values.length === 0 ? this.selectAll() : this.clearAll()\n    });\n  };\n\n  clearAll = () => {\n    this.props.onClearAll();\n    this.setState({\n      values: []\n    });\n  };\n\n  selectAll = (valuesList = []) => {\n    this.props.onSelectAll();\n    const values =\n      valuesList.length > 0 ? valuesList : this.props.options.filter((option) => !option.disabled);\n\n    this.setState({ values });\n  };\n\n  isSelected = (option) =>\n    !!this.state.values.find(\n      (value) =>\n        getByPath(value, this.props.valueField) === getByPath(option, this.props.valueField)\n    );\n\n  areAllSelected = () =>\n    this.state.values.length === this.props.options.filter((option) => !option.disabled).length;\n\n  safeString = (string) => string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n\n  sortBy = () => {\n    const { sortBy, options } = this.props;\n\n    if (!sortBy) {\n      return options;\n    }\n\n    options.sort((a, b) => {\n      if (getProp(a, sortBy) < getProp(b, sortBy)) {\n        return -1;\n      } else if (getProp(a, sortBy) > getProp(b, sortBy)) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n\n    return options;\n  };\n\n  searchFn = ({ state, methods }) => {\n    const regexp = new RegExp(methods.safeString(state.search), 'i');\n\n    return methods\n      .sortBy()\n      .filter((item) =>\n        regexp.test(getByPath(item, this.props.searchBy) || getByPath(item, this.props.valueField))\n      );\n  };\n\n  searchResults = () => {\n    const args = { state: this.state, props: this.props, methods: this.methods };\n\n    return this.props.searchFn(args) || this.searchFn(args);\n  };\n\n  activeCursorItem = (activeCursorItem) =>\n    this.setState({\n      activeCursorItem\n    });\n\n  handleKeyDown = (event) => {\n    const args = {\n      event,\n      state: this.state,\n      props: this.props,\n      methods: this.methods,\n      setState: this.setState.bind(this)\n    };\n\n    return this.props.handleKeyDownFn(args) || this.handleKeyDownFn(args);\n  };\n\n  handleKeyDownFn = ({ event, state, props, methods, setState }) => {\n    const { cursor, searchResults } = state;\n    const escape = event.key === 'Escape';\n    const enter = event.key === 'Enter';\n    const arrowUp = event.key === 'ArrowUp';\n    const arrowDown = event.key === 'ArrowDown';\n    const backspace = event.key === 'Backspace';\n    const tab = event.key === 'Tab' && !event.shiftKey;\n    const shiftTab = event.shiftKey && event.key === 'Tab';\n\n    if (arrowDown && !state.dropdown) {\n      event.preventDefault();\n      this.dropDown('open');\n      return setState({\n        cursor: 0\n      });\n    }\n\n    if ((arrowDown || (tab && state.dropdown)) && cursor === null) {\n      return setState({\n        cursor: 0\n      });\n    }\n\n    if (arrowUp || arrowDown || (shiftTab && state.dropdown) || (tab && state.dropdown)) {\n      event.preventDefault();\n    }\n\n    if (escape) {\n      this.dropDown('close');\n    }\n\n    if (enter) {\n      const currentItem = searchResults[cursor];\n      if (currentItem && !currentItem.disabled) {\n        if (props.create && valueExistInSelected(state.search, state.values, props)) {\n          return null;\n        }\n\n        methods.addItem(currentItem);\n      }\n    }\n\n    if ((arrowDown || (tab && state.dropdown)) && searchResults.length === cursor) {\n      return setState({\n        cursor: 0\n      });\n    }\n\n    if (arrowDown || (tab && state.dropdown)) {\n      setState((prevState) => ({\n        cursor: prevState.cursor + 1\n      }));\n    }\n\n    if ((arrowUp || (shiftTab && state.dropdown)) && cursor > 0) {\n      setState((prevState) => ({\n        cursor: prevState.cursor - 1\n      }));\n    }\n\n    if ((arrowUp || (shiftTab && state.dropdown)) && cursor === 0) {\n      setState({\n        cursor: searchResults.length\n      });\n    }\n\n    if (backspace && props.backspaceDelete && this.getInputSize() === 0) {\n      this.setState({\n        values: this.state.values.slice(0, -1)\n      });\n    }\n  };\n\n  renderDropdown = () =>\n    this.props.portal ? (\n      ReactDOM.createPortal(\n        <Dropdown props={this.props} state={this.state} methods={this.methods} />,\n        this.dropdownRoot\n      )\n    ) : (\n      <Dropdown props={this.props} state={this.state} methods={this.methods} />\n    );\n\n  createNew = (item) => {\n    const newValue = {\n      [this.props.labelField]: item,\n      [this.props.valueField]: item\n    };\n\n    this.addItem(newValue);\n    this.props.onCreateNew(newValue);\n    this.setState({ search: '' });\n  };\n\n  render() {\n    return (\n      <ClickOutside onClickOutside={(event) => this.dropDown('close', event)}>\n        <ReactDropdownSelect\n          onKeyDown={this.handleKeyDown}\n          aria-label=\"Dropdown select\"\n          aria-expanded={this.state.dropdown}\n          onClick={(event) => this.dropDown('open', event)}\n          tabIndex={this.props.disabled ? '-1' : '0'}\n          direction={this.props.direction}\n          style={this.props.style}\n          ref={this.select}\n          disabled={this.props.disabled}\n          className={`${LIB_NAME} ${this.props.className}`}\n          color={this.props.color}\n          {...this.props.additionalProps}>\n          <Content props={this.props} state={this.state} methods={this.methods} />\n\n          {(this.props.name || this.props.required) && (\n            <input\n              tabIndex={-1}\n              style={{ opacity: 0, width: 0, position: 'absolute' }}\n              name={this.props.name}\n              required={this.props.required}\n              pattern={this.props.pattern}\n              defaultValue={\n                this.state.values.map((value) => value[this.props.labelField]).toString() || []\n              }\n              disabled={this.props.disabled}\n            />\n          )}\n\n          {this.props.loading && <Loading props={this.props} />}\n\n          {this.props.clearable && (\n            <Clear props={this.props} state={this.state} methods={this.methods} />\n          )}\n\n          {this.props.separator && (\n            <Separator props={this.props} state={this.state} methods={this.methods} />\n          )}\n\n          {this.props.dropdownHandle && (\n            <DropdownHandle\n              onClick={() => this.select.current.focus()}\n              props={this.props}\n              state={this.state}\n              methods={this.methods}\n            />\n          )}\n\n          {this.state.dropdown && !this.props.disabled && this.renderDropdown()}\n        </ReactDropdownSelect>\n      </ClickOutside>\n    );\n  }\n}\n\nSelect.defaultProps = {\n  addPlaceholder: '',\n  placeholder: 'Select...',\n  values: [],\n  options: [],\n  multi: false,\n  disabled: false,\n  searchBy: 'label',\n  sortBy: null,\n  clearable: false,\n  searchable: true,\n  dropdownHandle: true,\n  separator: false,\n  keepOpen: undefined,\n  noDataLabel: 'No data',\n  createNewLabel: 'add {search}',\n  disabledLabel: 'disabled',\n  dropdownGap: 5,\n  closeOnScroll: false,\n  debounceDelay: 0,\n  labelField: 'label',\n  valueField: 'value',\n  color: '#0074D9',\n  keepSelectedInList: true,\n  closeOnSelect: false,\n  clearOnBlur: true,\n  clearOnSelect: true,\n  dropdownPosition: 'bottom',\n  dropdownHeight: '300px',\n  autoFocus: false,\n  portal: null,\n  create: false,\n  direction: 'ltr',\n  name: null,\n  required: false,\n  pattern: undefined,\n  onChange: () => undefined,\n  onDropdownOpen: () => undefined,\n  onDropdownClose: () => undefined,\n  onDropdownCloseRequest: undefined,\n  onClearAll: () => undefined,\n  onSelectAll: () => undefined,\n  onCreateNew: () => undefined,\n  searchFn: () => undefined,\n  handleKeyDownFn: () => undefined,\n  additionalProps: null,\n  backspaceDelete: true,\n  compareValuesFunc: isEqual\n};\n\nconst ReactDropdownSelect = styled.div`\n  box-sizing: border-box;\n  position: relative;\n  display: flex;\n  border: 1px solid #ccc;\n  width: 100%;\n  border-radius: 2px;\n  padding: 2px 5px;\n  flex-direction: row;\n  direction: ${({ direction }) => direction};\n  align-items: center;\n  cursor: pointer;\n  min-height: 36px;\n  ${({ disabled }) =>\n    disabled ? 'cursor: not-allowed;pointer-events: none;opacity: 0.3;' : 'pointer-events: all;'}\n\n  :hover,\n  :focus-within {\n    border-color: ${({ color }) => color};\n  }\n\n  :focus,\n  :focus-within {\n    outline: 0;\n    box-shadow: 0 0 0 3px ${({ color }) => hexToRGBA(color, 0.2)};\n  }\n\n  * {\n    box-sizing: border-box;\n  }\n`;\n\nexport default Select;\n"]},"metadata":{},"sourceType":"script"}