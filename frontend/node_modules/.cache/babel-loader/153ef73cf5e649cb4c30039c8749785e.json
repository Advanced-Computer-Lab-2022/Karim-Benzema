{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = !0, exports.default = void 0;\nvar _base = _interopRequireDefault(require(\"@emotion/styled/base\")),\n  _react = _interopRequireDefault(require(\"react\")),\n  _Option = _interopRequireDefault(require(\"./Option\")),\n  _Input = _interopRequireDefault(require(\"./Input\")),\n  _constants = require(\"../constants\"),\n  _util = require(\"../util\");\nfunction _interopRequireDefault(a) {\n  return a && a.__esModule ? a : {\n    default: a\n  };\n}\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() {\n  return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n}\nvar Content = function (a) {\n    var b = a.props,\n      c = a.state,\n      d = a.methods;\n    return _react.default.createElement(ContentComponent, {\n      className: _constants.LIB_NAME + \"-content \" + (b.multi ? _constants.LIB_NAME + \"-type-multi\" : _constants.LIB_NAME + \"-type-single\"),\n      onClick: function onClick(a) {\n        a.stopPropagation(), d.dropDown(\"open\");\n      }\n    }, b.contentRenderer ? b.contentRenderer({\n      props: b,\n      state: c,\n      methods: d\n    }) : _react.default.createElement(_react.default.Fragment, null, b.multi ? c.values && c.values.map(function (a) {\n      return _react.default.createElement(_Option.default, {\n        key: \"\" + (0, _util.getByPath)(a, b.valueField) + (0, _util.getByPath)(a, b.labelField),\n        item: a,\n        state: c,\n        props: b,\n        methods: d\n      });\n    }) : c.values && 0 < c.values.length && _react.default.createElement(\"span\", null, (0, _util.getByPath)(c.values[0], b.labelField)), _react.default.createElement(_Input.default, {\n      props: b,\n      methods: d,\n      state: c\n    })));\n  },\n  ContentComponent = (0, _base.default)(\"div\", \"production\" === process.env.NODE_ENV ? {\n    target: \"e1gn6jc30\"\n  } : {\n    target: \"e1gn6jc30\",\n    label: \"ContentComponent\"\n  })(\"production\" === process.env.NODE_ENV ? {\n    name: \"1m5113o\",\n    styles: \"display:flex;flex:1;flex-wrap:wrap\"\n  } : {\n    name: \"1m5113o\",\n    styles: \"display:flex;flex:1;flex-wrap:wrap\",\n    map: \"\",\n    toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n  }),\n  _default = Content;\nexports.default = _default;","map":{"version":3,"mappings":"AA0CmC;;AAAAA;AAAA;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;AAAA;EAAA;IAAAC;EAAA;AAAA;AAAA;EAAA;AAAA;AAAA;IAAA;MAAAC;MAAAC;IAAA;MAAAC;MAAAC;QAAAC;MAAA;IAAA;MAAAC;MAAAC;MAAAC;IAAA;MAAA;QAAAC;QAAAC;QAAAH;QAAAD;QAAAE;MAAA;IAAA;MAAAF;MAAAE;MAAAD;IAAA;EAAA;EAAAI;IAAAC;EAAA;IAAAA;IAAAC;EAAA;IAAAC;IAAAC;EAAA;IAAAD;IAAAC;IAAAC;IAAAC;EAAA;EAAAC;AAAAxB","names":["exports","_react","_Option","_Input","_constants","_util","default","c","d","className","onClick","a","props","state","methods","key","item","ContentComponent","target","label","name","styles","map","toString","_default"],"sources":["C:\\Users\\Yasmen\\Desktop\\Karim-Benzema-elfinale\\frontend\\node_modules\\react-dropdown-select\\src\\components\\Content.js"],"sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\n\nimport Option from './Option';\nimport Input from './Input';\nimport { LIB_NAME } from '../constants';\nimport {getByPath} from '../util';\n\nconst Content = ({ props, state, methods }) => {\n  return (\n    <ContentComponent\n      className={`${LIB_NAME}-content ${\n        props.multi ? `${LIB_NAME}-type-multi` : `${LIB_NAME}-type-single`\n      }`}\n      onClick={(event) => {\n        event.stopPropagation();\n        methods.dropDown('open');\n      }}>\n      {props.contentRenderer ? (\n        props.contentRenderer({ props, state, methods })\n      ) : (\n        <React.Fragment>\n          {props.multi\n            ? state.values &&\n              state.values.map((item) => (\n                <Option\n                  key={`${getByPath(item, props.valueField)}${getByPath(item, props.labelField)}`}\n                  item={item}\n                  state={state}\n                  props={props}\n                  methods={methods}\n                />\n              ))\n            : state.values &&\n              state.values.length > 0 && <span>{getByPath(state.values[0], props.labelField)}</span>}\n          <Input props={props} methods={methods} state={state} />\n        </React.Fragment>\n      )}\n    </ContentComponent>\n  );\n};\n\nconst ContentComponent = styled.div`\n  display: flex;\n  flex: 1;\n  flex-wrap: wrap;\n`;\n\nexport default Content;\n"]},"metadata":{},"sourceType":"script"}